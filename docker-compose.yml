services:
  app:
    build: .
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

  postgres:
    image: postgres:16
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  migrate:
    image: migrate/migrate:4
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./migrations:/migrations
    entrypoint:
      ["/bin/sh","-c",
       "migrate -path=/migrations -database ${POSTGRES_URL} up || true"
      ]
    restart: "no"

volumes:
  postgres_data:
